name: Deploy Migrations to Production

on:
  push:
    branches:
      - main
    paths:
      - "apps/api/**"
      - ".github/workflows/api-perform_migration.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up cache for Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            apps/api/.venv
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        working-directory: apps/api
        run: poetry install --no-interaction

      - name: Upgrade database to head
        working-directory: apps/api
        run: |
          source .venv/bin/activate
          alembic upgrade head

      - name: Finalize migration
        run: echo "Database migration completed if necessary."
