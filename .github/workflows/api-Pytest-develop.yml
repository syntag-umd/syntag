name: Run Pytests

on:
  # pull_request:
  #   branches:
  #     - develop
  #   paths:
  #     - "apps/api/**"
  #     - ".github/workflows/api-Pytest-develop.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: development

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up cache
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: apps/api/.venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        working-directory: apps/api
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Run Pytests
        working-directory: apps/api
        run: poetry run pytest
