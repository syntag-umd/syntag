"""knowledge table

Revision ID: eb408aa3b018
Revises: 7ee6a4867c4c
Create Date: 2024-08-07 20:12:21.104579

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "eb408aa3b018"
down_revision: Union[str, None] = "7ee6a4867c4c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "knowledge",
        sa.Column(
            "id",
            sa.Integer(),
            server_default=sa.text("nextval('\"voice_assistant_id_seq\"'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "uuid",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("userUuid", sa.UUID(), nullable=False),
        sa.Column(
            "createdAt",
            postgresql.TIMESTAMP(precision=3),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updatedAt",
            postgresql.TIMESTAMP(precision=3),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "type", sa.Enum("WEBSITE", "FILE", name="KnowledgeType"), nullable=False
        ),
        sa.Column("url", sa.Text(), nullable=True),
        sa.Column("gcloud_bucket", sa.Text(), nullable=True),
        sa.Column("gcloud_name", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ENQUEUE", "IN_PROGRESS", "READY", "FAILED", name="JobStatus"),
            nullable=True,
        ),
        sa.Column("error", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userUuid"], ["user.uuid"], onupdate="CASCADE", ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_knowledge_uuid"), "knowledge", ["uuid"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_knowledge_uuid"), table_name="knowledge")
    op.drop_table("knowledge")
    # ### end Alembic commands ###
